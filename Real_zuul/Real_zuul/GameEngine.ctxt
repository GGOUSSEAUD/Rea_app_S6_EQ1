#BlueJ class context
comment0.params=
comment0.target=GameEngine()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ GameEngine\n
comment1.params=userInterface
comment1.target=void\ setGUI(UserInterface)
comment10.params=command
comment10.target=void\ drop(Command)
comment11.params=command
comment11.target=void\ carryItem(Command)
comment12.params=command
comment12.target=void\ back(Command)
comment13.params=command
comment13.target=void\ test(Command)
comment14.params=
comment14.target=void\ items()
comment15.params=command
comment15.target=void\ use(Command)
comment16.params=
comment16.target=void\ look()
comment17.params=
comment17.target=void\ endGame()
comment2.params=
comment2.target=void\ printWelcome()
comment2.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment3.params=
comment3.target=Player\ createPlayer()
comment4.params=
comment4.target=void\ createItems()
comment5.params=
comment5.target=void\ createRooms()
comment5.text=\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\n
comment6.params=commandLine
comment6.target=void\ interpretCommand(java.lang.String)
comment6.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ If\ this\ command\ ends\ the\ game,\ true\ is\ returned,\ otherwise\ false\ is\n\ returned.\n
comment7.params=
comment7.target=void\ printHelp()
comment7.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
comment8.params=command
comment8.target=void\ goRoom(Command)
comment8.text=\ \n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\n\ room,\ otherwise\ print\ an\ error\ message.\n
comment9.params=command
comment9.target=void\ take(Command)
numComments=18
